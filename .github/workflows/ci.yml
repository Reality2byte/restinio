name: CI

on:
  push:
    branches: ["feature/CI-proof-of-concept"]

jobs:
  Build-Windows:
    # The type of runner that the job will run on
    name: ${{ matrix.config.name }} (${{ matrix.build_type }}, ${{ matrix.config.cxx }}, C++${{ matrix.cppstd }})
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "Windows Latest MSVC"
            os: windows-latest
            cc: "cl"
            cxx: "cl"
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
            generator: "Visual Studio 17 2022"
        build_type:
          # - Release
          - Debug
        cppstd:
          - 17
          # - 20
    env:
      CXX: ${{ matrix.config.cxx }}

    steps:
      - uses: actions/checkout@v3

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install cmake ruby
          cmake --version
          ruby --version
          gem install Mxx_ru

      - name: Configure
        shell: bash
        run: |
          mxxruexternals
          cd dev
          ls -la .
          cmake \
            -B _build_${{ matrix.config.cxx }}_${{ matrix.build_type }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DRESTINIO_EXPLICIT_CPPSTD=${{ matrix.cppstd }} \
            -G "${{ matrix.config.generator }}"
      - name: Build
        working-directory: ./dev
        shell: bash
        run: |
          cmake \
            --build _build_${{ matrix.config.cxx }}_${{ matrix.build_type }} \
            --config ${{ matrix.build_type }} \
            --verbose
      - name: Test
        shell: bash
        working-directory: ./dev
        run: |
          ctest \
            -T test \
            -C ${{ matrix.build_type }} \
            --test-dir _build_${{ matrix.config.cxx }}_${{ matrix.build_type }} \
            --output-on-failure \
            --no-compress-output \
            --output-junit test_${{ matrix.config.cxx }}_${{ matrix.build_type }}.xml

      # - name: Test Report
      #   uses: dorny/test-reporter@v1
      #   if: success() || failure()    # run this step even if previous step failed
      #   with:
      #     name: Tests ${{ matrix.config.name }} (${{ matrix.build_type }}, ${{ matrix.config.cxx }}, C++${{ matrix.cppstd }})
      #     path: test_${{ matrix.config.cxx }}_${{ matrix.build_type }}.xml
      #     reporter: junit        # Format of test results
